const t=JSON.parse('{"key":"v-0ec6bc4c","path":"/md/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Git/05-Git%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html","title":"05-Git快速入门","lang":"zh-CN","frontmatter":{"title":"05-Git快速入门","description":"1.Git 操作流程 1.1 代码提交 & 同步 Git 作为一个分布式版本控制系统，在工作流中主要涉及到五个关键的区域（或者区段）： 1. 工作区 (Working Directory) 这个区域其实就是我们在自己计算机上看到的文件夹，包含项目的所有文件。这里面的改动（修改、新增、删除文件等）不会自动保存到 Git 版本控制中，我们需要手动使用 gi...","head":[["meta",{"property":"og:url","content":"https://www.javgo.cn/md/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Git/05-Git%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"JavGo"}],["meta",{"property":"og:title","content":"05-Git快速入门"}],["meta",{"property":"og:description","content":"1.Git 操作流程 1.1 代码提交 & 同步 Git 作为一个分布式版本控制系统，在工作流中主要涉及到五个关键的区域（或者区段）： 1. 工作区 (Working Directory) 这个区域其实就是我们在自己计算机上看到的文件夹，包含项目的所有文件。这里面的改动（修改、新增、删除文件等）不会自动保存到 Git 版本控制中，我们需要手动使用 gi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-10T16:14:41.000Z"}],["meta",{"property":"article:author","content":"Mr.JavGo"}],["meta",{"property":"article:modified_time","content":"2023-11-10T16:14:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05-Git快速入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-10T16:14:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.JavGo\\",\\"url\\":\\"https://www.javgo.cn\\",\\"email\\":\\"javgocn@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"1.Git 操作流程","slug":"_1-git-操作流程","link":"#_1-git-操作流程","children":[{"level":3,"title":"1.1 代码提交 & 同步","slug":"_1-1-代码提交-同步","link":"#_1-1-代码提交-同步","children":[]},{"level":3,"title":"1.2 代码撤销 & 撤销同步","slug":"_1-2-代码撤销-撤销同步","link":"#_1-2-代码撤销-撤销同步","children":[]}]},{"level":2,"title":"2.Git 常用命令","slug":"_2-git-常用命令","link":"#_2-git-常用命令","children":[{"level":3,"title":"2.1 代码提交 & 同步代码","slug":"_2-1-代码提交-同步代码","link":"#_2-1-代码提交-同步代码","children":[]},{"level":3,"title":"2.2 代码撤销 & 撤销同步","slug":"_2-2-代码撤销-撤销同步","link":"#_2-2-代码撤销-撤销同步","children":[]},{"level":3,"title":"2.3 关联远程仓库","slug":"_2-3-关联远程仓库","link":"#_2-3-关联远程仓库","children":[]},{"level":3,"title":"2.4 切换分支","slug":"_2-4-切换分支","link":"#_2-4-切换分支","children":[]},{"level":3,"title":"2.5 撤销操作","slug":"_2-5-撤销操作","link":"#_2-5-撤销操作","children":[]},{"level":3,"title":"2.6 版本回退与前进","slug":"_2-6-版本回退与前进","link":"#_2-6-版本回退与前进","children":[]},{"level":3,"title":"2.7 配置 Git","slug":"_2-7-配置-git","link":"#_2-7-配置-git","children":[]}]},{"level":2,"title":"3.gitignore","slug":"_3-gitignore","link":"#_3-gitignore","children":[{"level":3,"title":"3.1 Git 忽略文件提交的方法","slug":"_3-1-git-忽略文件提交的方法","link":"#_3-1-git-忽略文件提交的方法","children":[]},{"level":3,"title":"3.1.1 在 Git 项目中定义 .gitignore 文件","slug":"_3-1-1-在-git-项目中定义-gitignore-文件","link":"#_3-1-1-在-git-项目中定义-gitignore-文件","children":[]},{"level":3,"title":"3.1.2 在 Git 项目的设置中指定排除文件","slug":"_3-1-2-在-git-项目的设置中指定排除文件","link":"#_3-1-2-在-git-项目的设置中指定排除文件","children":[]},{"level":3,"title":"3.1.3 定义 Git 全局的 .gitignore 文件","slug":"_3-1-3-定义-git-全局的-gitignore-文件","link":"#_3-1-3-定义-git-全局的-gitignore-文件","children":[]},{"level":3,"title":"3.2 Git 忽略规则","slug":"_3-2-git-忽略规则","link":"#_3-2-git-忽略规则","children":[]},{"level":3,"title":"3.3 Git 忽略优先级","slug":"_3-3-git-忽略优先级","link":"#_3-3-git-忽略优先级","children":[]},{"level":3,"title":"3.4 Git 忽略规则匹配语法","slug":"_3-4-git-忽略规则匹配语法","link":"#_3-4-git-忽略规则匹配语法","children":[]},{"level":3,"title":"3.5 常用匹配示例","slug":"_3-5-常用匹配示例","link":"#_3-5-常用匹配示例","children":[]},{"level":3,"title":"3.6 .gitignore 规则不生效问题","slug":"_3-6-gitignore-规则不生效问题","link":"#_3-6-gitignore-规则不生效问题","children":[]}]}],"git":{"createdTime":1699632881000,"updatedTime":1699632881000,"contributors":[{"name":"liyao","email":"liyao@jikugroup.com","commits":1}]},"readingTime":{"minutes":17.59,"words":5276},"filePathRelative":"md/开发工具/Git/05-Git快速入门.md","localizedDate":"2023年11月10日","copyright":{"author":"Mr.JavGo"},"autoDesc":true}');export{t as data};
