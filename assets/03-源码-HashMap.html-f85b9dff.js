const a=JSON.parse('{"key":"v-87a14edc","path":"/md/Java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/03-%E6%BA%90%E7%A0%81-HashMap.html","title":"03-源码-HashMap","lang":"zh-CN","frontmatter":{"title":"03-源码-HashMap","description":"title: 03-源码-HashMap 1.从 Map 接口入手 Map 是 Java 集合框架中的一个核心接口，用于存储键值对（key-value）。它确保每个键都是唯一的，并且每个键只能映射到一个值。 1.1 从 JDK 1.0 的 Dictionary\\\\ 抽象类讲起 在 Java 的早期（JDK 1.0）版本中，java.util.Dictio...","head":[["meta",{"property":"og:url","content":"https://www.javgo.cn/md/Java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/03-%E6%BA%90%E7%A0%81-HashMap.html"}],["meta",{"property":"og:site_name","content":"JavGo"}],["meta",{"property":"og:title","content":"03-源码-HashMap"}],["meta",{"property":"og:description","content":"title: 03-源码-HashMap 1.从 Map 接口入手 Map 是 Java 集合框架中的一个核心接口，用于存储键值对（key-value）。它确保每个键都是唯一的，并且每个键只能映射到一个值。 1.1 从 JDK 1.0 的 Dictionary\\\\ 抽象类讲起 在 Java 的早期（JDK 1.0）版本中，java.util.Dictio..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-10T16:14:41.000Z"}],["meta",{"property":"article:author","content":"Mr.JavGo"}],["meta",{"property":"article:modified_time","content":"2023-11-10T16:14:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03-源码-HashMap\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-10T16:14:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.JavGo\\",\\"url\\":\\"https://www.javgo.cn\\",\\"email\\":\\"javgocn@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"title: 03-源码-HashMap","slug":"title-03-源码-hashmap","link":"#title-03-源码-hashmap","children":[]},{"level":2,"title":"1.从 Map 接口入手","slug":"_1-从-map-接口入手","link":"#_1-从-map-接口入手","children":[{"level":3,"title":"1.1 从 JDK 1.0 的 Dictionary<K,V> 抽象类讲起","slug":"_1-1-从-jdk-1-0-的-dictionary-k-v-抽象类讲起","link":"#_1-1-从-jdk-1-0-的-dictionary-k-v-抽象类讲起","children":[]},{"level":3,"title":"1.2 Map 接口中的集合视图又是怎样的？","slug":"_1-2-map-接口中的集合视图又是怎样的","link":"#_1-2-map-接口中的集合视图又是怎样的","children":[]},{"level":3,"title":"1.3 为什么 JDK 官方不推荐使用可变对象作为 Map 的键？","slug":"_1-3-为什么-jdk-官方不推荐使用可变对象作为-map-的键","link":"#_1-3-为什么-jdk-官方不推荐使用可变对象作为-map-的键","children":[]},{"level":3,"title":"1.4 为什么映射不应该将自己作为键，而可以作为值？","slug":"_1-4-为什么映射不应该将自己作为键-而可以作为值","link":"#_1-4-为什么映射不应该将自己作为键-而可以作为值","children":[]},{"level":3,"title":"1.5 对于 Map 构造函数的规定","slug":"_1-5-对于-map-构造函数的规定","link":"#_1-5-对于-map-构造函数的规定","children":[]},{"level":3,"title":"1.6 Map 如何处理不支持的操作？","slug":"_1-6-map-如何处理不支持的操作","link":"#_1-6-map-如何处理不支持的操作","children":[]},{"level":3,"title":"1.7 Map 对于键和值有哪些限制？","slug":"_1-7-map-对于键和值有哪些限制","link":"#_1-7-map-对于键和值有哪些限制","children":[]}]},{"level":2,"title":"2.HashMap 基本描述","slug":"_2-hashmap-基本描述","link":"#_2-hashmap-基本描述","children":[{"level":3,"title":"2.1 重温哈希表的基本概念","slug":"_2-1-重温哈希表的基本概念","link":"#_2-1-重温哈希表的基本概念","children":[]},{"level":3,"title":"2.2 底层数据结构剖析","slug":"_2-2-底层数据结构剖析","link":"#_2-2-底层数据结构剖析","children":[]},{"level":3,"title":"2.3 HashMap 的属性","slug":"_2-3-hashmap-的属性","link":"#_2-3-hashmap-的属性","children":[]},{"level":3,"title":"2.3 HashMap 的构造器","slug":"_2-3-hashmap-的构造器","link":"#_2-3-hashmap-的构造器","children":[]},{"level":3,"title":"2.4 HashMap 中的链表设计","slug":"_2-4-hashmap-中的链表设计","link":"#_2-4-hashmap-中的链表设计","children":[]},{"level":3,"title":"2.5 HashMap 中的红黑树设计","slug":"_2-5-hashmap-中的红黑树设计","link":"#_2-5-hashmap-中的红黑树设计","children":[]},{"level":3,"title":"2.6 HashMap 对于 null 键/值的限制","slug":"_2-6-hashmap-对于-null-键-值的限制","link":"#_2-6-hashmap-对于-null-键-值的限制","children":[]},{"level":3,"title":"2.7 HashMap 的插入无序性","slug":"_2-7-hashmap-的插入无序性","link":"#_2-7-hashmap-的插入无序性","children":[]}]},{"level":2,"title":"3.HashMap 的性能如何？","slug":"_3-hashmap-的性能如何","link":"#_3-hashmap-的性能如何","children":[{"level":3,"title":"3.1 get(Object key)","slug":"_3-1-get-object-key","link":"#_3-1-get-object-key","children":[]},{"level":3,"title":"3.2 put(K key, V value)","slug":"_3-2-put-k-key-v-value","link":"#_3-2-put-k-key-v-value","children":[]}]},{"level":2,"title":"4.HashMap 如何高效存储？","slug":"_4-hashmap-如何高效存储","link":"#_4-hashmap-如何高效存储","children":[]},{"level":2,"title":"5.HashMap 为什么不是同步的？","slug":"_5-hashmap-为什么不是同步的","link":"#_5-hashmap-为什么不是同步的","children":[]},{"level":2,"title":"6.HashMap 迭代器的 fail-fast","slug":"_6-hashmap-迭代器的-fail-fast","link":"#_6-hashmap-迭代器的-fail-fast","children":[]},{"level":2,"title":"7.HashMap 扩容原理","slug":"_7-hashmap-扩容原理","link":"#_7-hashmap-扩容原理","children":[]}],"git":{"createdTime":1699632881000,"updatedTime":1699632881000,"contributors":[{"name":"liyao","email":"liyao@jikugroup.com","commits":1}]},"readingTime":{"minutes":73.91,"words":22172},"filePathRelative":"md/Java/集合框架/03-源码-HashMap.md","localizedDate":"2023年11月10日","copyright":{"author":"Mr.JavGo"},"autoDesc":true}');export{a as data};
