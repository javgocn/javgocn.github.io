const t=JSON.parse('{"key":"v-35ce58f0","path":"/md/Java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/02-%E6%BA%90%E7%A0%81-ArrayList.html","title":"02-源码-ArrayList","lang":"zh-CN","frontmatter":{"title":"02-源码-ArrayList","description":"title: 02-源码-ArrayList ArrayList 的底层是 Object[] 数组队列，相当于动态数组。与 Java 中的数组相比，它的容量能动态增长。在添加大量元素前，应用程序可以使用 ensureCapacity 操作来增加 ArrayList 实例的容量。这可以减少递增式再分配的数量。 ArrayList 继承于 Abstract...","head":[["meta",{"property":"og:url","content":"https://www.javgo.cn/md/Java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/02-%E6%BA%90%E7%A0%81-ArrayList.html"}],["meta",{"property":"og:site_name","content":"JavGo"}],["meta",{"property":"og:title","content":"02-源码-ArrayList"}],["meta",{"property":"og:description","content":"title: 02-源码-ArrayList ArrayList 的底层是 Object[] 数组队列，相当于动态数组。与 Java 中的数组相比，它的容量能动态增长。在添加大量元素前，应用程序可以使用 ensureCapacity 操作来增加 ArrayList 实例的容量。这可以减少递增式再分配的数量。 ArrayList 继承于 Abstract..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-10T16:14:41.000Z"}],["meta",{"property":"article:author","content":"Mr.JavGo"}],["meta",{"property":"article:modified_time","content":"2023-11-10T16:14:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02-源码-ArrayList\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-10T16:14:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.JavGo\\",\\"url\\":\\"https://www.javgo.cn\\",\\"email\\":\\"javgocn@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"title: 02-源码-ArrayList","slug":"title-02-源码-arraylist","link":"#title-02-源码-arraylist","children":[]},{"level":2,"title":"2.ArrayList 核心源码解读","slug":"_2-arraylist-核心源码解读","link":"#_2-arraylist-核心源码解读","children":[]},{"level":2,"title":"3.ArrayList 扩容机制分析","slug":"_3-arraylist-扩容机制分析","link":"#_3-arraylist-扩容机制分析","children":[{"level":3,"title":"3.1 从 ArrayList 的构造器入手","slug":"_3-1-从-arraylist-的构造器入手","link":"#_3-1-从-arraylist-的构造器入手","children":[]},{"level":3,"title":"3.2 进一步分析 ArrayList 扩容机制","slug":"_3-2-进一步分析-arraylist-扩容机制","link":"#_3-2-进一步分析-arraylist-扩容机制","children":[]},{"level":3,"title":"3.3 System.arraycopy() 和 Arrays.copeof()","slug":"_3-3-system-arraycopy-和-arrays-copeof","link":"#_3-3-system-arraycopy-和-arrays-copeof","children":[]},{"level":3,"title":"3.4 ensureCapacity()","slug":"_3-4-ensurecapacity","link":"#_3-4-ensurecapacity","children":[]}]}],"git":{"createdTime":1699632881000,"updatedTime":1699632881000,"contributors":[{"name":"liyao","email":"liyao@jikugroup.com","commits":1}]},"readingTime":{"minutes":10.66,"words":3197},"filePathRelative":"md/Java/集合框架/02-源码-ArrayList.md","localizedDate":"2023年11月10日","copyright":{"author":"Mr.JavGo"},"autoDesc":true}');export{t as data};
